/*==================== Widget container =======================*/
.container {
  display: grid;
  grid-template-columns: 5% auto 5%;
}
/* use these classes when render your own widget in app.jsx */
.item-widget-overview {
  grid-column: 2 / span 1;
  grid-row: 1 / span 1;
}
.item-widget-related-item {
  grid-column: 2 / span 1;
  grid-row: 2 / span 1;
}
.item-widget-qa {
  grid-column: 2 / span 1;
  grid-row: 3 / span 1;
}
.item-widget-review {
  grid-column: 2 / span 1;
  grid-row: 4 / span 1;
}

/*===================== Overlays effect =========================*/
/* How to add overlays:
1. use on and off function in html file.
2. for css style - use className overlay-bg and overlay-text
3. When calling on and off function don't forget to call with argument id of the overlay form */

form.overlay-bg {
  height: 100%;
  width: 0;
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  background-color: white;
  background-color: rgba(224, 224, 224, 0.9);
  overflow-x: hidden;
  transition: 0.5s;
}

form.overlay-content {
  position: relative;
  top: 25%;
  width: 100%;
  text-align: center;
  margin-top: 30px;
}

.overlay-content input[type=text],
.overlay-content textarea {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}

/*========================== Overview ==========================*/

/*======================== Related items =======================*/

.card-list {
  display: flex;
  flex-direction: row;
}

.product-card {
  width: 250px;
  height: 350px;
  outline: 1px solid black;
  margin-right: 30px;
}

.add-outfit-container {
  position: relative;
  height: 100%;
}

.add-outfit-container img {
  display: block;
}

.card-add-outfit {
  font-size: 400%;
  font-weight: 500;
  position: absolute;
  top: 40%;
  right: 43%;
}

.related-image-container {
  position: relative;
  height: 70%;
}

.related-image-container img {
  display: block;
}

.related-image-container .card-button {
  font-size: 160%;
  font-weight: 500;
  background-color: white;
  position: absolute;
  top: 4%;
  right: 4%;
}

.card-info {
  width: 100%;
}

.card-photo {
  height: 100%;
}

.card-category .card-price {
  font-weight: 200;
}

.card-name {
  font-weight: bold;
}

.card-info-holder {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.comparison-modal {
  width: 100%;
  height: 100%;
  position:fixed;
  z-index: 1;
  transition: opacity 500ms;
  visibility: hidden;
  opacity: 0;
}

.comparison-modal-visible {
  visibility: visible;  opacity: 1;
}


.comparison-table {
  align-items: center;
  background-color: blue;
  position: absolute;
}

/*========================== Reviews ===========================*/

/*============================= QA =============================*/
/* qa grid */
#container-qa {
  display: grid;
  grid-template-rows: 50px 50px auto 50px;
}

.qa {
  grid-row-start:  span 1;
}

.search-bar {
  grid-row-start: 2 span 1;
}

.questionlist {
  grid-row-start: 3 span 1;
}

/* .qa-more-button {
  grid-row-start: 4 span 1;
} */

/* question-answer grid */
.container-question-answer {
  display: grid;
  grid-template-columns: 4fr 2fr;
  grid-template-rows: auto auto auto;
}

.question {
  grid-column: 1 / span 1;
  grid-row: 1 / span 1;
}
.report-question {
  grid-column: 2 / span 1;
  grid-row: 1 / span 1;
}
.answer {
  grid-column: 1 / span 1;
  grid-row: 2 / span 1;
}
.load-more-answer {
  grid-column: 1 / span 1;
  grid-row: 3 / span 1;
}

/* styles */
#container-qa > div {
  margin: 10px 0px 0px 0px;
}


